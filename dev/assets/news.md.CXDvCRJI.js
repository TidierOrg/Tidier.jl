import{_ as e,c as o,o as d,a6 as i}from"./chunks/framework.Boj55bE3.js";const m=JSON.parse('{"title":"Tidier.jl updates","description":"","frontmatter":{},"headers":[],"relativePath":"news.md","filePath":"news.md","lastUpdated":null}'),a={name:"news.md"},t=i('<h1 id="Tidier.jl-updates" tabindex="-1">Tidier.jl updates <a class="header-anchor" href="#Tidier.jl-updates" aria-label="Permalink to &quot;Tidier.jl updates {#Tidier.jl-updates}&quot;">​</a></h1><h2 id="v1.4.0-2024-04-19" tabindex="-1">v1.4.0 - 2024-04-19 <a class="header-anchor" href="#v1.4.0-2024-04-19" aria-label="Permalink to &quot;v1.4.0 - 2024-04-19 {#v1.4.0-2024-04-19}&quot;">​</a></h2><ul><li><p>Add and re-export TidierDB.jl as DB</p></li><li><p>Add and re-export TidierFiles.jl</p></li></ul><h2 id="v1.3.0-2024-04-09" tabindex="-1">v1.3.0 - 2024-04-09 <a class="header-anchor" href="#v1.3.0-2024-04-09" aria-label="Permalink to &quot;v1.3.0 - 2024-04-09 {#v1.3.0-2024-04-09}&quot;">​</a></h2><ul><li><p>Update minimum Julia required version to 1.9</p></li><li><p>Base package version updates</p></li><li><p>New documentation</p></li></ul><h2 id="v1.2.1-2024-01-02" tabindex="-1">v1.2.1 - 2024-01-02 <a class="header-anchor" href="#v1.2.1-2024-01-02" aria-label="Permalink to &quot;v1.2.1 - 2024-01-02 {#v1.2.1-2024-01-02}&quot;">​</a></h2><ul><li>Base package version updates</li></ul><h2 id="v1.2.0-2023-11-28" tabindex="-1">v1.2.0 - 2023-11-28 <a class="header-anchor" href="#v1.2.0-2023-11-28" aria-label="Permalink to &quot;v1.2.0 - 2023-11-28 {#v1.2.0-2023-11-28}&quot;">​</a></h2><ul><li><p>Add and re-export TidierText.jl</p></li><li><p>Bugfix: Re-export TidierVest.jl (forgot to do this in 1.1.0)</p></li></ul><h2 id="v1.1.0-2023-11-18" tabindex="-1">v1.1.0 - 2023-11-18 <a class="header-anchor" href="#v1.1.0-2023-11-18" aria-label="Permalink to &quot;v1.1.0 - 2023-11-18 {#v1.1.0-2023-11-18}&quot;">​</a></h2><ul><li><p>Update versions of base packages</p></li><li><p>Add TidierVest.jl</p></li></ul><h2 id="v1.0.0-2023-08-07" tabindex="-1">v1.0.0 - 2023-08-07 <a class="header-anchor" href="#v1.0.0-2023-08-07" aria-label="Permalink to &quot;v1.0.0 - 2023-08-07 {#v1.0.0-2023-08-07}&quot;">​</a></h2><ul><li>Convert Tidier.jl to a meta-package that only re-exports other Tidier packages</li></ul><h2 id="v0.7.7-2023-07-15" tabindex="-1">v0.7.7 - 2023-07-15 <a class="header-anchor" href="#v0.7.7-2023-07-15" aria-label="Permalink to &quot;v0.7.7 - 2023-07-15 {#v0.7.7-2023-07-15}&quot;">​</a></h2><ul><li><p>Added documentation on how to interpolate variables inside of <code>for</code> loops. Note: <code>!!</code> interpolation doesn&#39;t work inside of <code>for</code> loops because macros are expanded during parsing and not at runtime.</p></li><li><p>Fixed bug in <code>parse_pivot_arg()</code> to enable interpolation inside of pivoting functions when used inside a <code>for</code> loop.</p></li><li><p>Added <code>cumsum()</code>, <code>cumprod()</code>, and <code>accumulate()</code> to the do-not-vectorize list.</p></li></ul><h2 id="v0.7.6-2023-05-04" tabindex="-1">v0.7.6 - 2023-05-04 <a class="header-anchor" href="#v0.7.6-2023-05-04" aria-label="Permalink to &quot;v0.7.6 - 2023-05-04 {#v0.7.6-2023-05-04}&quot;">​</a></h2><ul><li>Fixed bug to allow multiple columns in <code>@distinct()</code> separated by commas or using selection helpers.</li></ul><h2 id="v0.7.5-2023-04-30" tabindex="-1">v0.7.5 - 2023-04-30 <a class="header-anchor" href="#v0.7.5-2023-04-30" aria-label="Permalink to &quot;v0.7.5 - 2023-04-30 {#v0.7.5-2023-04-30}&quot;">​</a></h2><ul><li><p>Fixed bug to ensure that <code>&amp;&amp;</code> and <code>||</code> are auto-vectorized</p></li><li><p>Added docstrings and examples to show different ways of filtering by multiple &quot;and&quot; conditions, including <code>&amp;&amp;</code>, <code>&amp;</code>, and separating multiple expressions with commas.</p></li></ul><h2 id="v0.7.4-2023-04-11" tabindex="-1">v0.7.4 - 2023-04-11 <a class="header-anchor" href="#v0.7.4-2023-04-11" aria-label="Permalink to &quot;v0.7.4 - 2023-04-11 {#v0.7.4-2023-04-11}&quot;">​</a></h2><ul><li>Added <code>as_float()</code>, <code>as_integer()</code>, and <code>as_string()</code></li></ul><h2 id="v0.7.3-2023-04-10" tabindex="-1">v0.7.3 - 2023-04-10 <a class="header-anchor" href="#v0.7.3-2023-04-10" aria-label="Permalink to &quot;v0.7.3 - 2023-04-10 {#v0.7.3-2023-04-10}&quot;">​</a></h2><ul><li>Added <code>@glimpse()</code></li></ul><h2 id="v0.7.2-2023-04-05" tabindex="-1">v0.7.2 - 2023-04-05 <a class="header-anchor" href="#v0.7.2-2023-04-05" aria-label="Permalink to &quot;v0.7.2 - 2023-04-05 {#v0.7.2-2023-04-05}&quot;">​</a></h2><ul><li>Moved repo to TidierOrg</li></ul><h2 id="v0.7.1-2023-04-01" tabindex="-1">v0.7.1 - 2023-04-01 <a class="header-anchor" href="#v0.7.1-2023-04-01" aria-label="Permalink to &quot;v0.7.1 - 2023-04-01 {#v0.7.1-2023-04-01}&quot;">​</a></h2><ul><li><p>Added <code>@drop_na()</code> with optional column selection parameter</p></li><li><p>Re-exported <code>lead()</code> and <code>lag()</code> from ShiftedArrays.jl and added both to the do-not-vectorize list</p></li><li><p>Bug fix: Fixed <code>ntile()</code> condition for when all elements are missing</p></li></ul><h2 id="v0.7.0-2023-03-27" tabindex="-1">v0.7.0 - 2023-03-27 <a class="header-anchor" href="#v0.7.0-2023-03-27" aria-label="Permalink to &quot;v0.7.0 - 2023-03-27 {#v0.7.0-2023-03-27}&quot;">​</a></h2><ul><li><p>Added <code>@count()</code> and <code>@tally()</code></p></li><li><p>Added <code>@bind_rows()</code> and <code>@bind_cols()</code></p></li><li><p>Added <code>@clean_names()</code> to mimic R&#39;s <code>janitor::clean_names()</code> by wrapping the Cleaner.jl package</p></li><li><p>Added support for backticks to select columns containing spaces.</p></li><li><p>Added support for <code>ntile()</code>, which is on the do-not-vectorize list because it takes in a vector and returns a vector.</p></li><li><p>Bug fix: removed selection helpers (<code>startswith</code>, <code>contains</code>, and <code>endswith</code> from the do-not-vectorize list).</p></li></ul><h2 id="v0.6.0-2023-03-18" tabindex="-1">v0.6.0 - 2023-03-18 <a class="header-anchor" href="#v0.6.0-2023-03-18" aria-label="Permalink to &quot;v0.6.0 - 2023-03-18 {#v0.6.0-2023-03-18}&quot;">​</a></h2><ul><li><p>Added <code>@distinct()</code>. It behaves slightly differently from dplyr when provided arguments in that it returns all columns, not just the selected ones.</p></li><li><p>Added support for <code>n()</code> and <code>row_number()</code>.</p></li><li><p>Added support for negative selection helper functions (e.g., <code>-contains(&quot;a&quot;)</code>).</p></li><li><p>Added support for negative selection using <code>!</code> (e.g., <code>!a</code>, <code>!(a:b)</code>, <code>!contains(&quot;a&quot;)</code>).</p></li><li><p>In <code>@pivot_longer()</code>, the <code>names_to</code> and <code>values_to</code> arguments now also support strings (in addition to bare unquoted names).</p></li><li><p>In <code>@pivot_wider()</code>, the <code>names_from</code> and <code>values_from</code> arguments now also support strings (in addition to bare unquoted names).</p></li><li><p>Bug fix: <code>@mutate(a = 1)</code> or any scalar previously errored because the <code>1</code> was being wrapped inside a <code>QuoteNode</code>. Now, 1 is correctly broadcasted.</p></li><li><p>Bug fix: <code>@slice(df, 1,2,1)</code> previously only returned rows 1 and 2 only (and not 1 again). <code>@slice(df, 1,2,1)</code> now returns rows 1, 2, and 1 again.</p></li><li><p>Bug fix: added <code>repeat()</code> to the do-not-vectorize list.</p></li></ul><h2 id="v0.5.0-2023-03-10" tabindex="-1">v0.5.0 - 2023-03-10 <a class="header-anchor" href="#v0.5.0-2023-03-10" aria-label="Permalink to &quot;v0.5.0 - 2023-03-10 {#v0.5.0-2023-03-10}&quot;">​</a></h2><ul><li><p>Added <code>@pivot_wider()</code> and <code>@pivot_wider()</code>.</p></li><li><p>Added <code>if_else()</code> and <code>case_when()</code>.</p></li><li><p>Updated documentation to include <code>Main.variable</code> example as an alternative syntax for interpolation.</p></li><li><p>Simplified internal use of <code>subset()</code> by using keyword argument of <code>skipmissing = true</code> instead of using <code>coalesce(..., false)</code>.</p></li><li><p>For developers: doctests can now be run locally using <code>runtests.jl</code>.</p></li></ul><h2 id="v0.4.1-2023-03-05" tabindex="-1">v0.4.1 - 2023-03-05 <a class="header-anchor" href="#v0.4.1-2023-03-05" aria-label="Permalink to &quot;v0.4.1 - 2023-03-05 {#v0.4.1-2023-03-05}&quot;">​</a></h2><ul><li><p>In addition to <code>in</code> being auto-vectorized as before, the second argument is automatically wrapped inside of <code>Ref(Set(arg2))</code> if not already done to ensure that it is evaluated correctly and fast. See: <a href="https://bkamins.github.io/julialang/2023/02/10/in.html" target="_blank" rel="noreferrer">https://bkamins.github.io/julialang/2023/02/10/in.html</a> for details. This same behavior is also implemented for <code>∈</code> and <code>∉</code>.</p></li><li><p>Added documentation and docstrings for new <code>in</code> behavior with <code>@filter()</code> and <code>@mutate()</code>.</p></li><li><p>Improved interpolation to support values and not just column names. Note: there is a change of behavior now for strings, which are treated as values and not as column names. Updated examples in the documentation webpage for interpolation.</p></li><li><p>Bug fix: Re-exported <code>Cols()</code> because this is required for interpolated columns inside of <code>across()</code>. Previously, this was passing tests because <code>using RDatasets</code> was exporting <code>Cols()</code>.</p></li></ul><h2 id="v0.4.0-2023-02-29" tabindex="-1">v0.4.0 - 2023-02-29 <a class="header-anchor" href="#v0.4.0-2023-02-29" aria-label="Permalink to &quot;v0.4.0 - 2023-02-29 {#v0.4.0-2023-02-29}&quot;">​</a></h2><ul><li><p>Rewrote the parsing engine to remove all regular expression and string parsing</p></li><li><p>Selection helpers now work within both <code>@select()</code> and <code>across()</code>.</p></li><li><p><code>@group_by()</code> now sorts the groups (similar to <code>dplyr</code>) and supports tidy expressions, for example <code>@group_by(df, d = b + c)</code>.</p></li><li><p><code>@slice()</code> now supports grouped data frames. For example, <code>@slice(gdf, 1:2)</code> will slice the first 2 rows from each group if <code>gdf</code> is a grouped data frame.</p></li><li><p>All functions now work correctly with both grouped and ungrouped data frames following <code>dplyr</code> behavior. In other words, all functions retain grouping for grouped data frames (e.g., <code>ungroup = false</code>), other than <code>@summarize()</code>, which &quot;peels off&quot; one layer of grouping in a similar fashion to <code>dplyr</code>.</p></li><li><p>Added <code>@ungroup</code> to explicitly remove grouping</p></li><li><p>Added <code>@pull</code> macro to extract vectors</p></li><li><p>Added joins: <code>@left_join()</code>, <code>@right_join()</code>, <code>@inner_join()</code>, and <code>@full_join()</code>, which support natural joins (i.e., where no <code>by</code> argument is given) or explicit joins by providing keys. All join functions ungroup both data frames before joining.</p></li><li><p>Added <code>starts_with()</code> as an alias for Julia&#39;s <code>startswith()</code>, <code>ends_with()</code> as an alias for Julia&#39;s <code>endswith()</code>, and <code>matches()</code> as an alias for Julia&#39;s <code>Regex()</code>.</p></li><li><p>Enabled interpolation of global user variables using <code>!!</code> similar to R&#39;s <code>rlang</code>.</p></li><li><p>Enabled a <code>~</code> tilde operator to mark functions (or operators) as unvectorized so that Tidier.jl does not &quot;auto-vectorize&quot; them.</p></li><li><p>Disabled <code>@info</code> logging of generated <code>DataFrames.jl</code> code. This code can be shown by setting an option using the new <code>Tidier_set()</code> function.</p></li><li><p>Fixed a bug where functions were evaluated inside the module, which meant that user-provided functions would not work.</p></li><li><p><code>@filter()</code> now skips rows that evaluate to missing values.</p></li><li><p>Re-export a handful of functions from the <code>DataFrames.jl</code> package.</p></li><li><p>Added doctests to all examples in the docstrings.</p></li></ul><h2 id="v0.3.0-2023-02-11" tabindex="-1">v0.3.0 - 2023-02-11 <a class="header-anchor" href="#v0.3.0-2023-02-11" aria-label="Permalink to &quot;v0.3.0 - 2023-02-11 {#v0.3.0-2023-02-11}&quot;">​</a></h2><ul><li><p>Updated auto-vectorization so that operators are vectorized differently from other types of functions. This leads to nicer printing of the generated DataFrames.jl code. For example, 1 .+ 1 instead of (+).(1,1)</p></li><li><p>The generated DataFrames.jl code now prints to the screen</p></li><li><p>Updated the ordering of columns when using <code>across()</code> so that each column is summarized in consecutive columns (e.g., <code>Rating_mean</code>, <code>Rating_median</code>, <code>Budget_mean</code>, <code>Budget_median</code>) instead of being organized by function (e.g. of prior ordering: <code>Rating_mean</code>, <code>Budget_mean</code>, <code>Rating_median</code>, <code>Budget_median</code>)</p></li><li><p>Added exported functions for <code>across()</code> and <code>desc()</code> as a placeholder for documentation, though these functions will throw an error if called because they should only be called inside of Tidier macros</p></li><li><p>Corrected GitHub actions and added tests (contributed by @rdboyes)</p></li><li><p>Bumped version to 0.3.0</p></li></ul><h2 id="v0.2.0-2023-02-09" tabindex="-1">v0.2.0 - 2023-02-09 <a class="header-anchor" href="#v0.2.0-2023-02-09" aria-label="Permalink to &quot;v0.2.0 - 2023-02-09 {#v0.2.0-2023-02-09}&quot;">​</a></h2><ul><li><p>Fixed bug with <code>@rename()</code> so that it supports multiple arguments</p></li><li><p>Added support for numerical selection (both positive and negative) to <code>@select()</code></p></li><li><p>Added support for <code>@slice()</code>, including positive and negative indexing</p></li><li><p>Added support for <code>@arrange()</code>, including the use of <code>desc()</code> to specify descending order</p></li><li><p>Added support for <code>across()</code>, which has been confirmed to work with both <code>@mutate()</code>, <code>@summarize()</code>, and <code>@summarise()</code>.</p></li><li><p>Updated auto-vectorization so that <code>@summarize</code> and <code>@summarise</code> do not vectorize any functions</p></li><li><p>Re-export <code>Statistics</code> and <code>Chain.jl</code></p></li><li><p>Bumped version to 0.2.0</p></li></ul><h2 id="v0.1.0-2023-02-07" tabindex="-1">v0.1.0 - 2023-02-07 <a class="header-anchor" href="#v0.1.0-2023-02-07" aria-label="Permalink to &quot;v0.1.0 - 2023-02-07 {#v0.1.0-2023-02-07}&quot;">​</a></h2><ul><li>Initial release, version 0.1.0</li></ul>',43),l=[t];function n(r,c,s,p,u,h){return d(),o("div",null,l)}const f=e(a,[["render",n]]);export{m as __pageData,f as default};
